Queries for user story 4 and 5 :


User story 4-:

1.To get all users who have failed in 1 subject-

 db.progressReport.find({
      module : {
          $elemMatch: {
             
          attempts: {
                $elemMatch:{
 "attempt_no":{ $gt: 1 }
                           }
                         }
          }
          }
      })

2.To get all the users who have failed in a particular subject-

 db.progressReport.find({
      module : {
          $elemMatch: {
             "module_name": "ACS",
          attempts: {
                $elemMatch:{
 "attempt_no":{ $gt: 1 }
                           }

                                    }
          }
          }
      })


3.To get top 5 scorers of a particular subject-

Mongo-: db.progressReport.aggregate([
	{$unwind: '$module'},                                    
                 {$unwind: '$module.attempts'},
	{$sort: {"module.attempts.score": 1}},
	{ $match : { "module.module_name" : "IPM" } },
                  { $limit : 5 } 
                                             ])

Redis-
ZADD IPM 150 "user1"
ZADD IPM 200 "user2"
ZADD IPM 100 "user3"
ZADD IPM 200 "user4"
ZADD IPM 250 "user5"
(where 100 is a multiplier)

ZRANGE IPM 0 -1


4. To get details of a particular user-
db.progressReport.find({user_name:"sarang"})


User story 5-:


5.To get list of all companies where users have worked- 

 db.userWorkExperience.aggregate(
   [
     { $group : { _id : "$user_name", company: { $push: "$company_name" } } }
   ]
)


6.To get user work experience of a particular user sorted by start date-

  db.userWorkExperience.aggregate([
                    {$sort:{"start_date":1}},
                     { $match: {"user_name":"sarang"}}
])


7.To get no.of users working in a particular company-

    db.userWorkExperience.aggregate([
                     { $match: {"company_name":"samsung"}}
                      ])


8.To get all companies which have a particular domain-

  db.companyDetails.aggregate([
                      {$unwind: '$domains'}, 
                     { $match: {"domains":"software"}}
                      ])


9.To get no. of users working in a particular domain-

 db.companyDetails.aggregate([
   {
      $unwind: "$domains"
   },
  { $match: {"domains":"marketing"}},
   {
      $lookup:
         {
            from: "userWorkExperience",
            localField: "company_name",
            foreignField: "company_name",
            as: "userworkexperience"
        }
   },
   {
   $unwind: "$userworkexperience"
},                                                                                                                                           
   { $group: {_id:"$domains",listofusers: {$addToSet : "$userworkexperience.user_name"}}}   
])

10.To update a particular field in user work experience.

db.userWorkExperience.updateOne( {user_name:"sarang"},
                                  {
                                     $set: {designation: "senior analyst" , job_description:"data mining"  }
                                                       }
                                    )

 




 
 
